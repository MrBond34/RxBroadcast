// groupId, artifactId, version
group = 'rxbroadcast'
archivesBaseName = 'rxbroadcast'
version = '1.1.1'

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier 'javadoc'
}

publishing {
    publications {
        rxbroadcast(MavenPublication) {
            from components.java
            artifactId archivesBaseName
            pom {
                withXml {
                    def root = asNode()
                    root.appendNode('name', project.name)
                    root.appendNode('description', 'A small distributed event library for the JVM')
                    root.appendNode('url', 'http://rxbroadcast.website')
                    root.appendNode('packaging', 'jar')

                    def licenses = root.appendNode('licenses')
                    def license = licenses.appendNode('license')
                    license.appendNode('name', 'ISC')
                    license.appendNode('url', 'https://github.com/RxBroadcast/RxBroadcast/raw/master/LICENSE.md')

                    def scm = root.appendNode('scm')
                    scm.appendNode('url', 'https://github.com/RxBroadcast/RxBroadcast')

                    def issueManagement = root.appendNode('issueManagement')
                    issueManagement.appendNode('system', 'GitHub Issues')
                    issueManagement.appendNode('url', 'https://github.com/RxBroadcast/RxBroadcast/issues')
                }
            }
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER') ?: null
    key = System.getenv('BINTRAY_API_KEY') ?: null

    publications = ['rxbroadcast']
    publish = true

    pkg {
        repo = 'maven'
        name = project.name
        vcsUrl = 'https://github.com/RxBroadcast/RxBroadcast'
        licenses = ['ISC']
        version {
            name = project.version
            desc = 'A small distributed event library for the JVM'
        }
    }
}
